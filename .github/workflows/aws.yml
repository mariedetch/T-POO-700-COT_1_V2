name: Deploy Backend and Frontend to Heroku

on:
  push:
    branches:
      - main  # Déclencher le déploiement lorsque du code est poussé sur la branche main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v4

    # Installer le CLI Heroku
    - name: Install Heroku CLI
      run: curl https://cli-assets.heroku.com/install.sh | sh

    # Authentification avec Heroku Container Registry
    - name: Log in to Heroku Container Registry
      env:
        HEROKU_API_KEY: "HRKU-a40e9aa6-e9e1-44f5-8f26-aa1395ee1f33"
      run: echo $HEROKU_API_KEY | docker login --username=_ --password-stdin registry.heroku.com

    # --- Backend Deployment ---
    - name: Build and Push Backend Docker Image
      working-directory: ./time-manager-backend
      run: |
        docker build -t registry.heroku.com/time-manager-api/web .
        docker push registry.heroku.com/time-manager-api/web

    - name: Release Backend to Heroku
      run: heroku container:release web -a time-manager-api

    # --- Frontend Deployment ---
    - name: Build and Push Frontend Docker Image
      working-directory: ./time-manager-frontend
      run: |
        docker build -t registry.heroku.com/time-manager-web-app/web .
        docker push registry.heroku.com/time-manager-web-app/web

    - name: Release Frontend to Heroku
      run: heroku container:release web -a time-manager-web-app

    # Configuration de la base de données pour le backend
    - name: Set up Database Config for Backend
      run: |
        heroku config:set DATABASE_URL=$(heroku config:get DATABASE_URL --app time-manager-api) -a time-manager-api
